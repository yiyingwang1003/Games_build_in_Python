 * Did you attempt to make your computer player very smart -- i.e., do something more clever than just pick a random legal move?
I use 2 methods to make the computer player smart.
    * First method:
        if there is a chance for the computer to place a tile in the corners, put the tile on the corner first.
        Reason: The most important tip to win Othello is trying to put the tiles in the corners of the board, because
                the tiles played in the corners can never be flipped, and on the contrary, they can flip a great amount of
                the tiles of the opponent/human player.
    * Second method:
        if there is no chance for applying method 1, do the "greedy" move.
        That is, find the move that can flip the most tiles of the opponent/human player.

* If so, were you able to accomplish this? Is your computer player as smart as you would like?
Yes, I accomplished it. The computer player is smart as I imagined.

* How did you determine which piece to play next? Tell us about your “pick next move” algorithm
I calculate all the candidate squares that can be placed the computer's tile on,
and corresponding coordinates of the human player's tiles which can be flipped.
I store the data by using dictionary, whose keys are the coordinates of the candidates, 
and the values are the corresponding coordinates of the human player's tiles which can be flipped.
Then, for the First method, I compare the dictionary keys with the coordinates of the board's corners.
For the Second method, I compare the lengths of the dictionary values, and pick the longest one.

* How often did your computer program beat you, or your friends, or whoever tested it out for you?
My computer usually beats me...My husband can win a few rounds. 

* How would you improve it in the future?
For now, I estimate the best next move only depend on one next move. 
I think I could try to predict more following moves:
If the computer place a tile at a candidate square, what's the following moves that the human player can do next?
After the human player's any possible move, which squares are candidates for the computer?
All the following possible routes need to be calculated, the computer's scores of all the routes should be compared,
and the best next move for the computer is always the move that helps it to gain the highest score.
